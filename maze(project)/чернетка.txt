from pygame import*

window = display.set_mode((700, 500))
display.set_caption("Maze")

backgroud = transform.scale(image.load("background.jpg"), (700, 500))

mixer.init()
mixer.music.load('jungles.ogg')
mixer.music.play()
mixer.music.set_volume(0.1)

win_song = mixer.Sound('money.ogg')
lose_song = mixer.Sound('kick.ogg')

font.init()
font = font.Font(None, 70)
win_font = font.render('YOU WIN', True, (255, 215, 0))
lose_font = font.render('YOU LOSE', True, (200, 50, 50))

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, player_speed):
        super().__init__()
        self.image = transform.scale(image.load(player_image), (50, 50))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 0:
            self.rect.y -= 5
        if keys[K_DOWN] and self.rect.y < 450:
            self.rect.y += 5
        if keys[K_LEFT] and self.rect.x > 0:
            self.rect.x -= 5
        if keys[K_RIGHT] and self.rect.x < 650:
            self.rect.x += 5

class Enemy(GameSprite):
    left_fd = 'left'
    def update(self):
        if self.rect.x <= 480:
            self.left_fd = "right"
        if self.rect.x >= 650:
            self.left_fd = "left"
        if self.left_fd == "left":
            self.rect.x -= 3
        if self.left_fd == "right":
            self.rect.x += 3

class Wall(sprite.Sprite):
    def __init__(self, color_1, color_2, color_3, wall_x, wall_y, wall_width, wall_height):
        super().__init__() 
        self.color_1 = color_1 
        self.color_2 = color_2    
        self.color_3 = color_3   
        self.width = wall_width
        self.height = wall_height
        self.image = Surface((self.width, self.height))
        self.image.fill((color_1, color_2, color_3))
        self.rect = self.image.get_rect()
        self.rect.x = wall_x
        self.rect.y = wall_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))



player = Player('hero.png', 60, 100, 2)
enemy = Enemy('cyborg.png', 500, 350, 1)
win_game = GameSprite('treasure.png', 640, 440, 0)

wall1 = Wall(154, 205, 50, 200, 150, 10, 300)
wall2 = Wall(154, 205, 50, 300, 60, 10, 290)
wall3 = Wall(154, 205, 50, 400, 150, 10, 300)
wall4 = Wall(154, 205, 50, 200, 440, 210, 10)
wall5 = Wall(154, 205, 50, 200, 60, 500, 10)
wall6 = Wall(154, 205, 50, 400, 150, 80, 10)
wall7 = Wall(154, 205, 50, 480, 150, 10, 300)

game = True
finish = False
clock = time.Clock()
while game:

    for e in event.get():
        if e.type == QUIT:
            game = False

    if finish == False:
        window.blit(backgroud, (0, 0))
        enemy.update()
        player.update()
        player.reset()
        enemy.reset()
        win_game.reset()
        wall1.reset()
        wall2.reset()
        wall3.reset()
        wall4.reset()
        wall5.reset()
        wall6.reset()
        wall7.reset()
    if sprite.collide_rect(player, win_game):
        finish = True
        window.blit(win_font, (200, 200))
        win_song.play() 

    if sprite.collide_rect(player, enemy) or sprite.collide_rect(player, wall1) or sprite.collide_rect(player, wall2) or sprite.collide_rect(player, wall3) or sprite.collide_rect(player, wall4) or sprite.collide_rect(player, wall5) or sprite.collide_rect(player, wall6) or sprite.collide_rect(player, wall7):
        finish = True
        window.blit(lose_font, (200, 200))
        lose_song.play()

    clock.tick(60)
    display.update()